
import pandas as pd
import random
import datetime

# Set up random seed for reproducibility
random.seed(123)

# --------------- Generate SALES Table Data ---------------
# Define a date range for order dates
date_range = pd.date_range(start="2022-01-01", end="2023-12-31")

# Generate order data
sales_data = []
for order in range(1, 201):  # 200 total orders
    order_date = random.choice(date_range)
    item = random.randint(1, 20)  # Item IDs between 1-20
    customer = random.randint(1, 50)  # Customer IDs between 1-50
    qty = random.randint(1, 5)  # Quantity ordered
    total_revenue = qty * random.randint(10, 100)  # Randomized revenue calculation
    sales_data.append([order_date, order, item, customer, qty, total_revenue])

# Convert to DataFrame
sales_df = pd.DataFrame(sales_data, columns=["Date", "Order_id", "Item_id", "Customer_id", "Quantity", "Revenue"])

# --------------- Generate ITEMS Table Data ---------------
departments = ["Electronics", "Home", "Clothing", "Toys", "Sports"]
items_data = [[i, f"Item_{i}", random.randint(10, 100), random.choice(departments)] for i in range(1, 21)]
items_df = pd.DataFrame(items_data, columns=["Item_id", "Item_name", "Price", "Department"])

# --------------- Generate CUSTOMERS Table Data ---------------
name_pool = [("John", "Doe"), ("Jane", "Smith"), ("Alice", "Brown"), ("Bob", "Davis")]
customers_data = [[i, random.choice(name_pool)[0], random.choice(name_pool)[1], f"Address_{i}"] for i in range(1, 51)]
customers_df = pd.DataFrame(customers_data, columns=["Customer_id", "First_name", "Last_name", "Address"])

# Save datasets to CSV files (submission requirement)
sales_df.to_csv("sales.csv", index=False)
items_df.to_csv("items.csv", index=False)
customers_df.to_csv("customers.csv", index=False)

# ------------------------- Answers -------------------------

# 1. Total orders completed on 18th March 2023
orders_18_march = sales_df[sales_df['Date'] == '2023-03-18']
print("1. Total orders completed on 18th March 2023:", len(orders_18_march))

# 2. Orders for John Doe on 18th March 2023
john_doe_id = customers_df[(customers_df['First_name'] == "John") & (customers_df['Last_name'] == "Doe")]['Customer_id']
john_doe_orders = orders_18_march[orders_18_march['Customer_id'].isin(john_doe_id)]
print("2. Total orders by John Doe on 18th March 2023:", len(john_doe_orders))

# 3. Customers purchasing in January 2023 and average spending
january_orders = sales_df[(sales_df['Date'] >= '2023-01-01') & (sales_df['Date'] <= '2023-01-31')]
average_spend = january_orders.groupby('Customer_id')['Revenue'].sum().mean()
print("3. Average amount spent by customers in January 2023: $", round(average_spend, 2))

# 4. Departments with less than $600 revenue in 2022
sales_2022 = sales_df[sales_df['Date'].dt.year == 2022]
dept_revenue = sales_2022.merge(items_df, on="Item_id").groupby("Department")['Revenue'].sum()
low_revenue_departments = dept_revenue[dept_revenue < 600]
print("4. Departments with less than $600 revenue in 2022:")
print(low_revenue_departments)

# 5. Most and least revenue generated by an order
max_order_revenue = sales_df['Revenue'].max()
min_order_revenue = sales_df['Revenue'].min()
print(f"5. Most revenue by an order: ${max_order_revenue}")
print(f"5. Least revenue by an order: ${min_order_revenue}")

# 6. Details of the most lucrative order
most_lucrative_order = sales_df[sales_df['Revenue'] == max_order_revenue]
print("6. Details of the most lucrative order:")
print(most_lucrative_order)
